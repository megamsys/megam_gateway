# Routes
# This file defines all application routes of vertice (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /public path
GET   /assets/*file                   controllers.Assets.at(path="/public", file)

# Home page, static routes
GET   /                               controllers.Application.index

### ADMIN ROUTES : START
# Accounts
GET     /v2/admin/accounts            controllers.admin.Users.list
DELETE  /v2/admin/accounts/:id        controllers.admin.Users.delete(id: String)
POST    /v2/admin/accounts/update     controllers.admin.Users.update

# Licenses
POST  /v2/admin/licenses/content      controllers.admin.Licenses.post
GET   /v2/admin/licenses/:id          controllers.admin.Licenses.show(id: String)

# Reports
POST  /v2/admin/reports/content       controllers.admin.Reports.post

# Assemblys
GET   /v2/admin/assembly/:id          controllers.admin.Assembly.show(id: String)

# Balances
POST  /v2/admin/balances/update       controllers.admin.Balances.update

# Snapshots
GET   /v2/admin/snapshots             controllers.admin.Snapshots.list

### ADMIN ROUTES : END

### USER ROUTES
# Account
GET   /v2/accounts/:id                controllers.Accounts.show(id: String)
GET   /v2/accounts/forgot/:id         controllers.Accounts.forgot(id: String)
POST  /v2/accounts/login              controllers.Accounts.login
POST  /v2/accounts/content            controllers.Accounts.post
POST  /v2/accounts/update            	controllers.Accounts.update
POST  /v2/accounts/password_reset     controllers.Accounts.password_reset

# Organizations
POST /v2/organizations/content        controllers.team.Organizations.post
POST /v2/organizations/invite         controllers.team.Organizations.invite
GET  /v2/organizations	              controllers.team.Organizations.list

# Domains
POST /v2/domains/content              controllers.team.Domains.post
GET  /v2/domains                      controllers.team.Domains.list

# Assemblies
POST /v2/assemblies/content           controllers.camp.Assemblies.post
GET  /v2/assemblies	                  controllers.camp.Assemblies.list
GET  /v2/assemblies/:id               controllers.camp.Assemblies.show(id: String)
GET  /v2/assembly/:id           	    controllers.camp.Assembly.show(id: String)

#Sensors
POST /v2/sensors/content              controllers.camp.Sensor.post
# Assembly
GET  /v2/assembly	                    controllers.camp.Assembly.list
POST /v2/assembly/update              controllers.camp.Assembly.update

# Components
GET  /v2/components/:id         	    controllers.camp.Components.show(id: String)
POST /v2/components/update        	  controllers.camp.Components.update

# Marketplaces
GET  /v2/marketplaces                 controllers.MarketPlaces.list
GET  /v2/marketplaces/:flavor         controllers.MarketPlaces.show(flavor: String)

# Requests
POST /v2/requests/content            	controllers.Requests.post
GET   /v2/requests/:id                controllers.Requests.show(id: String)

# Events
POST  /v2/eventsvm/content            controllers.EventsVm.post
GET  /v2/eventsvm/:limit              controllers.EventsVm.list(limit: String)
POST /v2/eventsvm/show/:limit         controllers.EventsVm.show(limit: String)
GET  /v2/eventsvm                     controllers.EventsVm.index

POST  /v2/eventscontainer/content     controllers.EventsContainer.post
GET  /v2/eventscontainer/:limit       controllers.EventsContainer.list(limit: String)
POST /v2/eventscontainer/show/:limit  controllers.EventsContainer.show(limit: String)
GET  /v2/eventscontainer              controllers.EventsContainer.index

POST  /v2/eventsbilling/content       controllers.EventsBilling.post
GET  /v2/eventsbilling/:limit         controllers.EventsBilling.list(limit: String)
POST /v2/eventsbilling/show/:limit    controllers.EventsBilling.show(limit: String)
GET  /v2/eventsbilling                controllers.EventsBilling.index

POST  /v2/eventsstorage/content       controllers.EventsStorage.post
GET  /v2/eventsstorage/:limit         controllers.EventsStorage.list(limit: String)
GET  /v2/eventsstorage                controllers.EventsStorage.index

# SSH
POST /v2/sshkeys/content              controllers.SshKeys.post
GET  /v2/sshkeys                      controllers.SshKeys.list
GET  /v2/sshkeys/:name                controllers.SshKeys.show(name: String)

# Snapshots
POST /v2/snapshots/content            controllers.Snapshots.post
GET  /v2/snapshots                    controllers.Snapshots.list
GET  /v2/snapshots/:id                controllers.Snapshots.show(id: String)
GET  /v2/snapshots/show/:id           controllers.Snapshots.get(id: String)
POST /v2/snapshots/update             controllers.Snapshots.update
DELETE /v2/snapshots/:assembly_id/:id    controllers.Snapshots.delete(assembly_id: String, id: String)

# Backupvms
POST /v2/backups/content            controllers.Backups.post
GET  /v2/backups                    controllers.Backups.list
GET  /v2/backups/:id                controllers.Backups.show(id: String)
GET  /v2/backups/show/:id           controllers.Backups.get(id: String)
POST /v2/backups/update             controllers.Backups.update
DELETE /v2/backups/:assembly_id/:id    controllers.Backups.delete(assembly_id: String, id: String)

# Disks (Block storage)
POST   /v2/disks/content                  controllers.Disks.post
GET    /v2/disks                          controllers.Disks.list
GET    /v2/disks/:id                      controllers.Disks.show(id: String)
GET    /v2/disks/show/:id                 controllers.Disks.get(id: String)
GET    /v2/disks/delete/:assembly_id/:id  controllers.Disks.initdel(assembly_id: String, id: String)
DELETE /v2/disks/:assembly_id/:id         controllers.Disks.delete(assembly_id: String, id: String)
POST   /v2/disks/update                   controllers.Disks.update

# Billings
# Called by the 3rd party billing (WHMCS or any others)
POST /v2/balances/content			        controllers.billing.Balances.post
POST /v2/balances/bill                controllers.billing.Balances.bill
GET	 /v2/balances/:id                 controllers.billing.Balances.show(id: String)

POST /v2/credits/content			        controllers.billing.Credits.post
GET	 /v2/credits                      controllers.billing.Credits.list
GET /v2/credits/:account_id           controllers.billing.Credits.show(account_id: String)

POST /v2/billingtransactions/content	controllers.billing.Billingtransactions.post
GET  /v2/billingtransactions          controllers.billing.Billingtransactions.list

POST /v2/billedhistories/content	    controllers.billing.Billedhistories.post
GET  /v2/billedhistories              controllers.billing.Billedhistories.list

POST /v2/quotas/content	              controllers.billing.Quotas.post
POST /v2/quotas/update                controllers.billing.Quotas.update
GET  /v2/quotas/:name                 controllers.billing.Quotas.show(name: String)
GET  /v2/quotas                       controllers.billing.Quotas.list

# Addons (external ids)
POST /v2/addons/content               controllers.addons.Addons.post
GET	 /v2/addons/:name                 controllers.addons.Addons.show(name: String)

# User Reports
POST  /v2/accounts/reports/content    controllers.Reports.post

# We don't use this thing for now.
POST /v2/subscriptions/content	      controllers.billing.Subscriptions.post
GET  /v2/subscriptions                controllers.billing.Subscriptions.show
